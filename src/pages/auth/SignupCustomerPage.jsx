import React from "react";
import "./SignupCustomerPage.css";
import Input from "../../shared/ui/Input/Input";
import Button from "../../shared/ui/Button/Button";
import { signupCustomer, login } from "../../entities/auth/api";
import { uploadAvatar } from "../../entities/user/api"; // ‚úÖ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–≤–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π API
import { useNavigate, useLocation, Link } from "react-router-dom";

export default function SignupCustomerPage() {
  const nav = useNavigate();
  const loc = useLocation();
  const returnTo = loc.state?.returnTo || "/orders/new";

  const [form, setForm] = React.useState({
    fullName: "",
    email: "",
    phoneNumber: "",
    password: "",
    password2: "",
    agree: true,
  });

  // üñºÔ∏è –§–æ—Ç–æ
  const [photo, setPhoto] = React.useState(null);
  const [photoPreview, setPhotoPreview] = React.useState("");

  const [touched, setTouched] = React.useState({});
  const [loading, setLoading] = React.useState(false);
  const [err, setErr] = React.useState("");
  const [ok, setOk] = React.useState("");

  const onChange = (e) => {
    const { name, value, type, checked } = e.target;
    setForm((s) => ({ ...s, [name]: type === "checkbox" ? checked : value }));
  };

  const onBlur = (e) => setTouched((t) => ({ ...t, [e.target.name]: true }));

  // üî∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ç–æ
  const onPhotoChange = (e) => {
    const file = e.target.files?.[0];
    if (!file) {
      setPhoto(null);
      setPhotoPreview("");
      return;
    }

    if (!file.type.startsWith("image/")) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è");
      return;
    }
    if (file.size > 5 * 1024 * 1024) {
      alert("–§–æ—Ç–æ –Ω–µ –ø–æ–≤–∏–Ω–Ω–æ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 5 –ú–ë");
      return;
    }

    setPhoto(file);
    setPhotoPreview(URL.createObjectURL(file));
  };

  // üß© –í–∞–ª–∏–¥–∞—Ü–∏—è
  const errs = {
    fullName: form.fullName.trim().length >= 3 ? "" : "–í–∫–∞–∂—ñ—Ç—å —ñ–º‚Äô—è",
    email: /\S+@\S+\.\S+/.test(form.email) ? "" : "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π email",
    phoneNumber: form.phoneNumber.trim().length >= 7 ? "" : "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω",
    password: /(?=.*[a-z])(?=.*[A-Z])(?=.*[\W_]).{6,}/.test(form.password)
      ? ""
      : "–ú—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤, –ª—ñ—Ç–µ—Ä–∞ ‚Üë —ñ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª",
    password2: form.password && form.password === form.password2 ? "" : "–ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è",
    agree: form.agree ? "" : "–ü–æ—Ç—Ä—ñ–±–Ω–∞ –∑–≥–æ–¥–∞",
  };
  const isValid = Object.values(errs).every((x) => !x);

  // üü¢ –°–∞–±–º–∏—Ç
  const submit = async (e) => {
    e.preventDefault();
    if (!isValid) {
      setTouched({ fullName: 1, email: 1, phoneNumber: 1, password: 1, password2: 1, agree: 1 });
      return;
    }

    try {
      setLoading(true);
      setErr("");
      setOk("");

      // 1Ô∏è‚É£ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–µ—Ä–∞
      await signupCustomer({
        fullName: form.fullName,
        email: form.email,
        phoneNumber: form.phoneNumber,
        password: form.password,
        rememberMe: true,
      });

      // 2Ô∏è‚É£ –ª–æ–≥–∏–Ω ‚Äî —á—Ç–æ–±—ã –∏–º–µ—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è uploadAvatar
      await login({ email: form.email, password: form.password });

      // 3Ô∏è‚É£ –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º
      if (photo) {
        try {
          const res = await uploadAvatar(photo);
          console.log("‚úÖ –ê–≤–∞—Ç–∞—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:", res);
        } catch (upErr) {
          console.warn("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ñ–æ—Ç–æ:", upErr);
        }
      }

      // 4Ô∏è‚É£ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥
      setOk("–û–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å —Å—Ç–≤–æ—Ä–µ–Ω–æ. –£–≤—ñ–π–¥—ñ—Ç—å –∑—ñ —Å–≤–æ—ó–º –ª–æ–≥—ñ–Ω–æ–º —ñ –ø–∞—Ä–æ–ª–µ–º.");
      setTimeout(() => {
        nav("/login", { replace: true, state: { returnTo } });
      }, 700);
    } catch (e2) {
      let msg = e2?.message || "";
      try {
        const raw = msg.split("‚Äî")[1];
        const json = raw ? JSON.parse(raw) : null;
        msg = json?.message || "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è";
      } catch {}
      setErr(msg || "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="auth-wrap container">
      <h1 className="auth-title">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è (–∑–∞–º–æ–≤–Ω–∏–∫)</h1>

      <form className="auth-form" onSubmit={submit} noValidate>
        <Input
          label="–ü–Ü–ë"
          name="fullName"
          value={form.fullName}
          onChange={onChange}
          onBlur={onBlur}
          error={touched.fullName && errs.fullName}
        />
        <Input
          label="–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞"
          name="email"
          type="email"
          value={form.email}
          onChange={onChange}
          onBlur={onBlur}
          error={touched.email && errs.email}
        />
        <Input
          label="–¢–µ–ª–µ—Ñ–æ–Ω"
          name="phoneNumber"
          value={form.phoneNumber}
          onChange={onChange}
          onBlur={onBlur}
          error={touched.phoneNumber && errs.phoneNumber}
        />
        <Input
          label="–ü–∞—Ä–æ–ª—å"
          name="password"
          type="password"
          value={form.password}
          onChange={onChange}
          onBlur={onBlur}
          error={touched.password && errs.password}
        />
        <Input
          label="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é"
          name="password2"
          type="password"
          value={form.password2}
          onChange={onChange}
          onBlur={onBlur}
          error={touched.password2 && errs.password2}
        />

        {/* üñºÔ∏è –ø–æ–ª–µ —Ñ–æ—Ç–æ */}
        <div className="auth-photo">
          <label className="auth-photo__label">–§–æ—Ç–æ –ø—Ä–æ—Ñ—ñ–ª—é (–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ)</label>
          <input type="file" accept="image/*" onChange={onPhotoChange} />
          {photoPreview && (
            <div className="auth-photo__preview">
              <img src={photoPreview} alt="–ü—Ä–µ–≤'—é" />
            </div>
          )}
        </div>

        <label className="auth-check">
          <input type="checkbox" name="agree" checked={form.agree} onChange={onChange} />
          <span>–ü–æ–≥–æ–¥–∂—É—é—Å—å –∑ —É–º–æ–≤–∞–º–∏ —Å–µ—Ä–≤—ñ—Å—É —Ç–∞ –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ</span>
        </label>

        {err && <div className="auth-error">{err}</div>}
        {ok && <div className="auth-success">{ok}</div>}

        <Button type="submit" fullWidth disabled={!isValid || loading}>
          {loading ? "–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è‚Ä¶" : "–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è"}
        </Button>

        <div className="auth-links">
          <Link to="/login">–í–∂–µ —î –∞–∫–∞—É–Ω—Ç? –£–≤—ñ–π—Ç–∏</Link>
          <Link to="/">–ù–∞ –≥–æ–ª–æ–≤–Ω—É</Link>
        </div>
      </form>
    </div>
  );
}
